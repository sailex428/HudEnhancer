plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {

}

loom {
    splitEnvironmentSourceSets()

	mods {
		"position-display" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

	runConfigs.all {
		ideConfigGenerated true // Run configurations are not created for subprojects by default
		runDir "../../run" // Use a shared run folder and just create separate worlds
	}

}

dependencies {
	minecraft "com.mojang:minecraft:${property('deps.minecraft')}"
	mappings "net.fabricmc:yarn:${property('deps.yarn_mappings')}:v2"
	modImplementation "net.fabricmc:fabric-loader:${property('deps.fabric_loader')}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${property('deps.fabric_api')}"
	implementation 'com.fasterxml.jackson.core:jackson-core:2.13.1'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories {

	}
}